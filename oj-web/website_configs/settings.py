"""
Django settings for website_configs project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-jl==lja$kjxwf+!=yt@(2oja*6ob8jg#!n*_7#j_a+zrrk2-kr"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
# DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "import_export",
    # Restful API
    "rest_framework",
    "app_oj.apps.OjConfig",
    "app_management",
    "app_account.apps.AppLoginConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "website_configs.urls"

import os

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "website_configs.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

import os

"""
# postgres db container oj-web is not in the container 用容器資料庫
DATABASES = {
    'default': {
    'ENGINE': 'django.db.backends.postgresql',
    'NAME': 'onlinejudge',
    'USER': 'onlinejudge',
    'PASSWORD': 'onlinejudge',
    'HOST': 'easyoj-postgres',
    'PORT': 5432, #default port you don't need to mention in docker-compose
    # 'PORT': 5432, #default port you don't need to mention in docker-compose
    }
}
"""
# the environ variables are defined in the oj-web yaml 用容器資料庫
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": os.environ.get("POSTGRES_NAME"),
        "USER": os.environ.get("POSTGRES_USER"),
        "PASSWORD": os.environ.get("POSTGRES_PASSWORD"),
        #'HOST': 'oj-postgres',
        "HOST": os.environ.get("OJDB_HOST"),
        "PORT": os.environ.get(
            "OJDB_PORT"
        ),  # 5432, #default port you don't need to mention in docker-compose
    }
}


"""
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}
"""


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

# Time zone
TIME_ZONE = os.getenv("TZ", "UTC")
USE_TZ = True

# Internationalization
USE_I18N = True
USE_L10N = True

# Static files (CSS, JavaScript, Images)
# 網頁端會用到{%  load static %}
STATIC_URL = "/static/"

# 靜態檔案的搜尋路徑 搜尋根目錄static，也會搜尋各app底下的 static卷夾
# 若有新的檔案，需要重新製作新的容器，才會再去更新python manage.py collectstaticfiles
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    # BASE_DIR / 'static', # 這種寫法也可以
]

# STATIC_ROOT只有在部署網站時才會需要用到
# Production階段用到的設定，Nginx的靜態路徑需與此路徑配合
STATIC_ROOT = BASE_DIR / "staticfiles"
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# 自訂使用者
#AUTH_USER_MODEL = "app_oj.User"
AUTH_USER_MODEL = "app_account.User"

LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/"


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "simple": {"format": "%(asctime)s - %(levelname)s - %(module)s - %(message)s"},
    },
    "handlers": {
        "file": {
            "level": "DEBUG",
            "class": "logging.FileHandler",
            "filename": "./django-logfile.log",
            "formatter": "simple",
        },
        "console": {
            "level": "DEBUG",
            "class": "logging.StreamHandler",
            "formatter": "simple",
        },
    },
    "loggers": {
        "root": {  # means "root logger"
            "handlers": ["file", "console"],  # use the above "console" handler
            "level": "DEBUG",  # logging level
        },
        "logger": {
            "handlers": ["file", "console"],
            "level": "DEBUG",
        },
    },
}

# 'filename': './logsfiles/debug.log'

# 瀏覽器cookie生存時間與瀏覽器關閉session不失效
# Default session settings
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
SESSION_COOKIE_AGE = 1209600  # 2 weeks
