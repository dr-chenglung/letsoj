categories,title,description,input_output_description,std_input,std_output,sample_code,created_at,modified_at,template,language
6,Python計算圓面積,"請設計一個程式，以函數計算圓面積。

**說明：**  

請在以下函數內計算圓面積：  
```
def getArea(r) {
	...
}
```

**提示：**  
圓面積公式：  
\\(math.pi\*r\* r\\)  

**注意：**  
你需貼上完整的程式碼
radius = float(input()) 讀取使用者輸入，並使用 float() 函數將其轉換為浮點數，以處理小數半徑的情況。  
area = getArea(radius) 呼叫 getArea 函式計算圓面積。  

**輸入：**  
`圓形半徑`  

**輸出：**  
`圓形面積（四捨五入至小數位後 2 位）`  

**假設：**  
使用者輸入圓形半徑 = 5：  
```
5
```

然後輸出圓形面積：  
```
78.54
```

-----

**例子：**  
```
5
78.54
```",,10,314.16,"import math
def get_area(r):
  """"""計算圓形面積

  Args:
    r: 圓形半徑

  Returns:
    圓形面積
  """"""

  return math.pi * r * r
  
radius = float(input()) # 讀取使用者輸入並轉換為浮點數
print(  round(get_area(radius), 2))
#print(f""{get_area(radius):.2f}"")",2025-01-13 17:00:31,2025-01-13 17:25:29,"//PREPEND BEGIN
//PREPEND END

//TEMPLATE BEGIN
//TEMPLATE END

//APPEND BEGIN
//APPEND END",2
6,使用C計算圓面積,"請設計一個程式，以函數計算圓面積。

**說明：**  

引入標頭檔： stdio.h 提供輸入輸出函式 (scanf, printf)，math.h 提供數學函式及常數，例如 M_PI (圓周率)。

getArea 函式： 接收一個 double 型別的半徑 r 作為參數，計算圓面積並回傳 double 型別的結果。

main 函式：

宣告一個 double 型別的變數 radius 用於儲存使用者輸入的半徑。  
使用 scanf(""%lf"", &radius); 讀取使用者輸入的半徑。%lf 用於讀取 double 型別的數值。  
呼叫 getArea 函式計算圓面積，並將結果儲存在 area 變數中。  
使用 printf(""%.2lf\n"", area); 輸出圓面積。%.2lf 用於格式化輸出，保留兩位小數，\n 則用於換行。  

請在以下函數內計算圓面積：  
```
double getArea(double r){
	...
}
```

**提示：**  
圓面積公式：  
\\(pi\*r\* r\\)  

**注意：**  
其中pi可使用 M_PI (需要引入 math.h) 或自行定義為 3.14159265358979323846 
#include <math.h>

printf(""%.2lf\n"", area); // 使用 %.2lf 格式化輸出，保留兩位小數


**輸入：**  
`圓形半徑`  

**輸出：**  
`圓形面積（四捨五入至小數位後 2 位）`  

**假設：**  
使用者輸入圓形半徑 = 5：  
```
5
```

然後輸出圓形面積：  
```
78.54
```

-----

**例子：**  
```
5
78.54
```",,10,314.16,"#include <stdio.h>
#include <math.h>

double getArea(double r) {
    return M_PI * r * r; // 使用 math.h 提供的 M_PI
    // 或
    // const double PI = 3.14159265358979323846; // 自行定義 PI
    // return PI * r * r;
}

int main() {
    double radius;
    scanf(""%lf"", &radius);

    double area = getArea(radius);
    printf(""%.2lf\n"", area); // 使用 %.2lf 格式化輸出，保留兩位小數

    return 0;
}
",2025-01-13 16:56:21,2025-01-13 17:05:10,"//PREPEND BEGIN
//PREPEND END

//TEMPLATE BEGIN
//TEMPLATE END

//APPEND BEGIN
//APPEND END",3
6,C計算圓面積（直接貼上函數）,"請設計一個程式，以函數計算圓面積。

**說明：**  

請在以下函數內計算圓面積：  
```
double getArea(double r){
	...
}
```

**提示：**  
圓面積公式：  
\\(pi\*r\* r\\)  

其中pi可使用 M_PI (需要引入 math.h) 或自行定義為 3.14159265358979323846

**注意：**  
直接貼上方法即可，其餘的OJ都寫好了。

**輸入：**  
`圓形半徑`  

**輸出：**  
`圓形面積（四捨五入至小數位後 2 位）`  

**假設：**  
使用者輸入圓形半徑 = 5：  
```
5
```

然後輸出圓形面積：  
```
78.54
```

-----

**例子：**  
```
5
78.54
```",,10,314.16,"double getArea(double r) {
    return M_PI * r * r; // 使用 math.h 提供的 M_PI
    // 或
    // const double PI = 3.14159265358979323846; // 自行定義 PI
    // return PI * r * r;
}

",2025-01-13 16:44:42,2025-01-13 17:52:38,"//PREPEND BEGIN
#include <stdio.h>
#include <math.h>
//PREPEND END

//TEMPLATE BEGIN
//TEMPLATE END

//APPEND BEGIN
int main() {
    double radius;
    scanf(""%lf"", &radius);

    double area = getArea(radius);
    printf(""%.2lf\n"", area); // 使用 %.2lf 格式化輸出，保留兩位小數

    return 0;
}
//APPEND END",3
6,Python計算圓面積（直接貼上函數）,"請設計一個程式，以函數計算圓面積。

**說明：**  

請在以下函數內計算圓面積：  
```
def getArea(r) {
	...
}
```

**提示：**  
圓面積公式：  
\\(math.pi\*r\* r\\)  

**注意：**  
直接貼上方法即可，其餘的OJ都寫好了。

**輸入：**  
`圓形半徑`  

**輸出：**  
`圓形面積（四捨五入至小數位後 2 位）`  

**假設：**  
使用者輸入圓形半徑 = 5：  
```
5
```

然後輸出圓形面積：  
```
78.54
```

-----

**例子：**  
```
5
78.54
```",,,314.16,"def get_area(r):
  """"""計算圓形面積

  Args:
    r: 圓形半徑

  Returns:
    圓形面積
  """"""

  return math.pi * r * r",2025-01-03 00:47:26,2025-01-13 17:52:49,"//PREPEND BEGIN
import math
//PREPEND END

//TEMPLATE BEGIN
//TEMPLATE END

//APPEND BEGIN
print(  round(get_area(10), 2))
//APPEND END",2
9,Bmi類別提供計算getBmi()與建議getSuggestion()的方法,"設計一個計算Bmi的類別 ，提供**設定建議(suggest)的方法**，並支援**初始化時直接設定身高、體重**，最後提供**計算bmi的方法**，並**返回對應的提示字串**。

------
 **說明：**

(1) 以下是寫好的 **`兩種` 操作步驟** ( 程式碼之數值設定、執行順序僅供參考 )

**Main 類別已在 OJ 寫死，不能更動；**
```java
public class Main {
    public static void main(String[] args) {
	
        //第一種方式初始法:呼叫無參數建構子
        Bmi james = new Bmi();
		james.setHeight(175);
		james.setWeight(100);
		System.out.printf(""%.2f\n"",james.getBmi());
        System.out.println(james.getSuggention());

        // 第二種方式初始法:呼叫有參數建構子
        //初始法並設定身高、體重
        Bmi sandy = new Bmi(175, 70);
		System.out.printf(""%.2f\n"",sandy.getBmi());
        System.out.println(sandy.getSuggention());
		
    }//main()
}//Main
```

(2) 以下**兩種對應的輸出**：

**第一種方式初始法:呼叫無參數建構子**

`Bmi james = new Bmi();`

`james.setHeight(175); //設定身高`

`james.setWeight(100); //設定體重`


**輸出結果：**
```
32.65
中度肥胖
```

**第二種方式初始法:呼叫有參數建構子**

`Bmi sandy = new Bmi(175, 70);`

**輸出結果：**
```
22.86
正常
```

**計算Bmi公式：**

\\( Bmi =  weight \div (height \div 100) ^ 2\\)

**注意：** **身高(height)** 要從 **`公分(cm)`**，換算成 **`公尺(m)`**

計算Bmi的程式碼如下：
```
bmi = weight / Math.pow(height / 100.0, 2);
```

**suggest判斷：**
```
bmi < 18.5
過輕
18.5 ≤ bmi < 25.0
正常
25.0 ≤ bmi < 27.0
過重
27.0 ≤ bmi < 30.0
輕度肥胖
30.0 ≤ bmi < 35.0
中度肥胖
bmi ≥ 35.0
重度肥胖
```

(3) **請完成Bmi類別**，讓主程式可以正確的執行**前述兩種對應的輸出功能**。
```
class Bmi {
    //基本資料(身高、體重)
    private int height;
    private int weight;

    //也可有bmi、建議等欄位，可有可無，不是必要。

    //定義有參數建構子
    public Bmi(int height, int weight) {
		...
    }

    //定義無參數建構子
    public Bmi() {
    }

    public void setHeight(int h) {
		...
    }
    public void setWeight(int w) {
		...
    }

    //回傳suggest
    public String getSuggention() {
        // 先取得bmi的值: 可以呼叫getBmi()直接取用
		...
		
        //suggest判斷
		...
    }

    //回傳bmi ( bmi每求必算 )
    public double getBmi() {
        //bmi計算
		...
    }
}
```",,,"32.65
中度肥胖
22.86
正常","class Bmi {
    //基本資料(身高、體重)
    private int height;
    private int weight;

    //也可有bmi、建議等欄位，可有可無，不是必要。

    //定義有參數建構子
    public Bmi(int height, int weight) {
        this.height = height;
        this.weight = weight;
    }

    //定義無參數建構子
    public Bmi() {
    }

    public void setHeight(int h) {
        this.height = h;
    }
    public void setWeight(int w) {
        this.weight = w;
    }

    //回傳suggest
    public String getSuggention() {
        // 先取得bmi的值: 可以呼叫getBmi()直接取用
        double bmi;
        if(weight==0 || height==0)
		{
            return ""沒有給身高體重"";
        }else{
            bmi = getBmi();
        }
        
        //suggest判斷
        if (bmi < 18.5) {
            return ""過輕"";
       } else if (bmi < 25.0) {
            return ""正常"";
       } else if (bmi < 27.0) {
            return ""過重"";
       } else if (bmi < 30.0) {
            return ""輕度肥胖"";
       } else if (bmi < 35.0) {
            return ""中度肥胖"";  
       } else{
            return ""重度肥胖"";
       }
    }

    //回傳bmi ( bmi每求必算 )
    public double getBmi() {
        //bmi計算
        if(weight==0 || height==0)
		{
            return 0;
        }else{
            return weight / Math.pow(height / 100.0, 2);
        }
    }
}",2024-12-22 21:57:00,2024-12-24 01:44:45,"//PREPEND BEGIN
public class Main {
    public static void main(String[] args) {

        //第一種方式初始法:呼叫無參數建構子
        Bmi James = new Bmi();
        James.setHeight(175);
        James.setWeight(100);
        // James.computBmi();
        System.out.printf(""%.2f\n"",James.getBmi());
        System.out.println(James.getSuggention());

        // 第二種方式初始法:呼叫有參數建構子
        //初始法並設定身高、體重
        Bmi Sandy = new Bmi(175, 70);
        System.out.printf(""%.2f\n"",Sandy.getBmi());
        System.out.println(Sandy.getSuggention());

    }//main()
}//Main
//PREPEND END
//TEMPLATE BEGIN
//TEMPLATE END
//APPEND BEGIN
//APPEND END",1
7,兩個陣列是否相等,"請設計一個程式，使用者輸入**兩個陣列**，判斷兩者是否**相等**。

-----

**輸入：** `兩個陣列`

**輸出：** `兩個陣列` **`相同`** `為` **`true`**，**`不同`** `則為` **`false`**

**說明：**

當使用者輸入兩個一維陣列：
```
3 10 20 30
3 10 20 30
```
最後陣列經程式判斷後輸出：
```
true
```

**注意：**

1.需判斷 **`陣列長度`**
```
if (array1.length != array2.length) {
   ...
}
```
2.**`陣列順序不同`**，則為 **`false`**，例子：
```
3 1 2 3
3 3 2 1
false
```
3.**`同順序的負數`**，則為 **`true`**，例子：
```
4 -1 -2 -3 -4
4 -1 -2 -3 -4
true
```

**提示：**
```java
public static boolean equals(int[] array1, int[] array2) {

//判斷陣列長度是否相等
...

//判斷陣列每個值是否相等
...
}
```

-----

**例子：**
```
3 10 20 30
3 15 20 30
false
```",,"4 10 20 30 10
3 10 20 30
---
4 1 2 3 4
4 4 3 2 1
---
3 -1 -2 -3
3 -1 -2 -3","false
---
false
---
true","import java.util.Scanner;
public class Main {
public static void main(String[] args) {

Scanner input = new Scanner(System.in);
//讀第 1 個陣列
int N1=input.nextInt();
int[] array1 = new int[N1];
for (int i=0; i < array1.length; i++)
{
   array1[i] = input.nextInt();
}

//讀第 2 個陣列
int N2=input.nextInt();
int[] array2 = new int[N2];
for (int i=0; i < array2.length; i++)
{
   array2[i] = input.nextInt();
}
   //印出比對結果
   System.out.println(equals(array1, array2));
}

public static boolean equals(int[] array1, int[] array2) {

if (array1.length != array2.length) {
   return false;
}

for (int i = 0; i < array1.length; i++) {
   if (array1[i] != array2[i]) {
      return false;
   }
}
   return true;
}
}",2024-12-11 17:28:14,2024-12-12 16:13:54,"//PREPEND BEGIN
//PREPEND END
//TEMPLATE BEGIN
//TEMPLATE END
//APPEND BEGIN
//APPEND END",1
9,依據主程式要求之功能，自訂 Circle 類別及其「一般方法」，提供計算圓形面積與周長功能,"依據主程式要求之功能，自訂 Circle 類別及其一般方法，提供計算圓形面積與周長功能。

-----

**說明：**  

(1) 以下為要求之功能及例子  
```java
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int r = sc.nextInt();
        Circle c = new Circle(r);        
        System.out.printf(""%.2f\n"", c.getArea()); // 輸出圓形面積
        System.out.printf(""%.2f\n"", c.getPerimeter()); // 輸出圓周
   }
}
```

例如輸入圓形半徑 = 10  
```java
10
```

經計算後，圓形面積 = 314.16，圓周 = 62.83，  
輸出圓形面積、圓周    
```java
314.16
62.83
```

(2) 請完成以下類別與方法；只須提交此部分
```java
class Circle {
	...
	
	public Circle(int r) {
        ...
    }
	
	// 圓形面積
    public double getArea() {
        ...
    }

    // 圓周
    public double getPerimeter() {
        ...
    }
}
```

(3) 圓形面積公式  
\\(  PI × radius × radius\\)  
其中 \\(PI = 3.14159\\)

(4) 圓周公式  
\\( 2 × PI × radius\\)  
其中 \\(PI = 3.14159\\)",,5,"78.54
31.42","class Circle {

    public static final double PI = 3.14159;

    private int radius;

    public Circle(int radius) {
        this.radius = radius;
    }

    public double getArea() {
        return PI * Math.pow(radius, 2);
    }

    public double getPerimeter() {
        return 2 * PI * this.radius;
    }
}
",2024-12-05 22:24:34,2024-12-11 14:29:08,"//PREPEND BEGIN
import java.util.Scanner;
//PREPEND END

//TEMPLATE BEGIN
//這裡填入完整的 Circle 類別
//TEMPLATE END

//APPEND BEGIN
public class Main {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int r = sc.nextInt();
        Circle c = new Circle(r);        
        System.out.printf(""%.2f\n"", c.getArea());
        System.out.printf(""%.2f\n"", c.getPerimeter());
    }
}
//APPEND END",1
8,使用二維陣列計算學生成績之平均分數：處理與列印都寫在main(){},"請設計一個程式，當使用者輸入 `2維陣列` **學生成績**，回傳每個人(列)的 `1維陣列` **平均成績**。

-----

**輸入：** `N位學生各M次考試成績`

**輸出：** `計算每個學生的平均成績`

**說明：**

例如，輸入 **`3`位學生各`4`次考試成績**：
```
3 4
85 80 74 82
73 58 69 87
90 95 97 92
```

最後輸出**平均成績**：
```
80.25
71.75
93.50
```

**注意：**

小數點後四捨五入至第**`2`**位  

**提示：**   
請參考 `w11-2` - **二維與多維陣列**的講義 `p8-p14`

**你要完成以下程式碼，並讀取考試分數**
```java
import java.util.Scanner;
public class Main{
   
    public static void main(String[] args) {

         Scanner input = new Scanner(System.in);
        // 輸入N位學生各M次考試
        int N = input.nextInt();
        int M = input.nextInt();
        // 輸入N位學生各M次考試成績
        int[][] grades = new int[N][M];
     
        for (int i=0; i < N; i++)
        {
            for (int j=0; j < M; j++)
            {
                grades[i][j] = input.nextInt();
            }
        }
        
        // 處理並列印結果 
		
       
    }

} //Main結束
```

-----

**例子：**
```java
3 4
85 80 74 82
73 58 69 87
90 95 97 92
80.25
71.75
93.50
```",,"3
4
92 81 74 82 
73 58 55 87 
90 95 97 84","82.25
68.25
91.50","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {

        Scanner input = new Scanner(System.in);
        // 輸入N位學生各M次考試
        int N = input.nextInt();
        int M = input.nextInt();
        // 輸入N位學生各M次考試成績
        int[][] grades = new int[N][M];

        for (int i = 0; i < N; i++) {
            for (int j = 0; j < M; j++) {
                grades[i][j] = input.nextInt();
            }
        }
        // 處理與列印結果 
        // displayResult(GradeBook.getStudentAvg(grades));
        for (int i = 0; i < N; i++) {
            double sum = 0;
            for (int j = 0; j < M; j++) {
                sum += grades[i][j];
            }
            double avg = sum / M;
            System.out.printf(""%.2f\n"", avg);
        }
    }

} //Main結束
",2024-11-29 22:07:54,2024-12-03 18:11:04,"//PREPEND BEGIN

//PREPEND END

//TEMPLATE BEGIN
//TEMPLATE END

//APPEND BEGIN

//APPEND END",1
4,印出梯形,"請設計一個程式，使用者輸入梯形上底 n1、下底 n2，然後輸出指定格式的梯形。

-----

說明：  

**輸入順序為：**  
`上底 n1 (整數)、下底 n1 (整數)；兩者之間以一個半形空格分隔`

**輸出格式請看假設部分**  

**假設：**  
假設，使用者輸入梯形上底 n1 = 3、下底 n2 = 7：  
```java
3 7
```

然後，輸出以下格式的梯形：
```java
    123
   1234
  12345
 123456
1234567
```

-----

例子：  
```java
3 7
    123
   1234
  12345
 123456
1234567
```",,5 9,"    12345
   123456
  1234567
 12345678
123456789","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);        
        int n1 = scanner.nextInt();
        int n2 = scanner.nextInt();
        
        for(int i = n1; i <= n2; i++) {
            for(int j = 0; j < n2 - i; j++)
                System.out.print("" "");
            
            for(int j = 1; j <= i; j++)
                System.out.print(j);
            
            System.out.println();
        }
    }
}
",2024-10-19 06:02:00,2024-10-24 23:55:32,"//PREPEND BEGIN
//PREPEND END
//TEMPLATE BEGIN
//TEMPLATE END
//APPEND BEGIN
//APPEND END",1
"3,4",輸出整數 n1 至整數 n2 之間的質數,"請設計一個程式，使用者輸入整數 n1 及整數 n2，代表尋找質數之範圍；然後輸出整數 n1（含）至整數 n2（含）之間的質數。

-----

說明：  

**輸入順序為：**  
`n1 (整數)、n2 (整數)；兩者之間以一個半形空格分隔`

**輸出格式為：**  

1. 如只有 1 個質數，輸出：  
`質數1`

2. 如有多個質數，輸出：  
`質數1 至 質數n；之間以一個半形空格分隔`

3. 如果沒有找到任何質數，輸出：  
`No prime number`

**假設 1：**  
假設，使用者輸入 n1 = 1、n2 = 2：
```java
1 2
```

1 至 2 之間，只有 2 為質數，因此輸出：  
```java
2
```

**假設 2：**  
假設，使用者輸入 n1 = 2、n2 = 11：
```java
2 11
```

2 至 11 之間，2、3、5、7、11 為質數，因此輸出：  
```java
2,3,5,7,11
```

**假設 3：**  
假設，使用者輸入 n1 = 12、n2 = 30：
```java
12 30
```

12 至 30 之間，13、17、19、23、29 為質數，因此輸出：  
```java
13,17,19,23,29
```

**假設 4：**  
假設，使用者輸入 n1 = 1、n2 = 1：
```java
1 1
```

沒有找到任何質數，因此輸出：  
```java
No prime number
```

-----

例子 1：  
```java
1 2
2
```

例子 2：  
```java
2 11
2,3,5,7,11
```

例子 3：  
```java
12 30
13,17,19,23,29
```

例子 4：  
```java
1 1
No prime number
```",,1 100,"2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97","import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);        
        int n1 = scanner.nextInt();
        int n2 = scanner.nextInt();
        
        String result = """";
        
        for(int i = n1; i <= n2; i++) {
            boolean isPrime = true;
            
            if(i > 1) {
                for(int j = 2; j < i; j++) {
                    if(i % j == 0) {
                        isPrime = false;
                        break;
                    }
                }
            } else {
                isPrime = false;
            }
            
            if(isPrime) {
                if(!result.isEmpty())
                    result += "","" + i;
                else
                    result += i;
            }
        }
        
        if(result.isEmpty())
            result = ""No prime number"";
        
        System.out.println(result);
    }
}
",2024-10-19 05:35:00,2024-10-24 23:55:32,"//PREPEND BEGIN
//PREPEND END
//TEMPLATE BEGIN
//TEMPLATE END
//APPEND BEGIN
//APPEND END",1
4,簡單收銀機,"請設計一個簡單收銀機，使用者輸入 n 個商品金額及顧客付款金額，然後計算並輸出商品數量、商品價格總額、顧客付款金額、須找多少錢。

-----

說明：  

**輸入順序為：**  
`多個商品金額、-1 (結束輸入商品金額)、顧客付款金額；之間以一個半形空格分隔`  

**輸出格式為：**  
`商品數量:(答案)`  
`商品價格總額:(答案)`  
`顧客付款金額:(答案)`  
`須找多少錢:(答案)`

**假設：**  
假設，使用者輸入 3 個商品金額 10、12、15，然後輸入 -1 代表結束輸入商品金額，最後輸入顧客付款金額 50：  
```java
10 12 15 -1 50
```

然後計算並輸出商品數量、商品價格總額、顧客付款金額、須找多少錢：  
```java
商品數量:3
商品價格總額:37
顧客付款金額:50
須找多少錢:13
```

-----

例子 1：  
```java
10 12 15 -1 50
商品數量:3
商品價格總額:37
顧客付款金額:50
須找多少錢:13
```

例子 2：  
```java
10 -1 10
商品數量:1
商品價格總額:10
顧客付款金額:10
須找多少錢:0
```",,18 39 50 100 -1 250,"商品數量:4
商品價格總額:207
顧客付款金額:250
須找多少錢:43","import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int count = 0;
        int sum = 0;

        while (true) {
            int price = scanner.nextInt();

            if (price == -1) {
                break;
            }

            count++;
            sum += price;
        }

        int payment = scanner.nextInt();
        int change = payment - sum;

        System.out.println(""商品數量:"" + count);
        System.out.println(""商品價格總額:"" + sum);
        System.out.println(""顧客付款金額:"" + payment);
        System.out.println(""須找多少錢:"" + change);
    }
}
",2024-10-12 18:50:57,2024-10-24 23:55:32,"//PREPEND BEGIN
//PREPEND END
//TEMPLATE BEGIN
//TEMPLATE END
//APPEND BEGIN
//APPEND END",1
3,輸入兩次密碼的比對,"使用者輸入兩次密碼字串，然後檢查這兩次輸入的密碼是否相符。

如果相符，則印出「密碼設定正確」的訊息；如果兩次輸入的密碼不相符，則印出「兩次輸入的密碼不一致」的訊息

密碼不能包含有空白。

字串比對使用  equals()

例如: name, pass1, pass2都是字串，常見以下字串比對用法:

name.equals(""李大同"")      pass1.equals( pass2 )

```
pass123 pass123
密碼設定正確
```

```
pass123 pass125
兩次輸入的密碼不一致
```",,pass1 pass1,密碼設定正確,"import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        // 預設的密碼字串
        //String defaultPassword = """";
        
        // 建立 Scanner 物件以讀取使用者輸入
        Scanner sc = new Scanner(System.in);
        
        // 提示使用者輸入第一次密碼
        //System.out.print(""請輸入第一次密碼: "");
        String firstInput = sc.next();
        
        // 提示使用者輸入第二次密碼
        //System.out.print(""請輸入第二次密碼: "");
        String secondInput = sc.next();
        
        // 檢查兩次輸入的密碼是否相符
        if (firstInput.equals(secondInput)) {
            // 檢查輸入的密碼是否與預設密碼相符
            System.out.println(""密碼設定正確"");
        } else {
            System.out.println(""兩次輸入的密碼不一致"");
        }
        
        // 關閉 Scanner
        sc.close();
    }
}

",2024-09-28 12:16:26,2024-10-24 23:55:32,"//PREPEND BEGIN
//PREPEND END
//TEMPLATE BEGIN
//TEMPLATE END
//APPEND BEGIN
//APPEND END",1
1,計算 BMI,"請撰寫一個程式，使用者輸入身高和體重，然後計算並輸出 BMI 值。

-----

說明：  

第 1 行：  
輸入身高（公分）、體重（公斤）

第 2 行：  
輸出 BMI 值（四捨五入至小數點後 2 位）

BMI 公式：  
BMI = 體重 / 身高（公尺）平方  

BMI = kg / (m * m)

-----

例子：  

第 1 行：  
輸入身高（公分）= 170、體重（公斤）= 80

第 2 行：  
輸出 BMI 值 = 80 / (170 / 100)^2 = 27.68（四捨五入至小數點後 2 位）

```
170 80
27.68
```",,199 55,13.89,"import java.util.Scanner;

/**
 *
 * @author billtsoi
 */
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int h = scanner.nextInt();
        int w = scanner.nextInt();
        
        System.out.printf(""%.2f\n"", w / Math.pow(h / 100.0, 2));

        scanner.close();
    }
}
",2024-09-26 02:50:08,2024-10-24 23:55:32,"//PREPEND BEGIN
//PREPEND END
//TEMPLATE BEGIN
//TEMPLATE END
//APPEND BEGIN
//APPEND END",1
2,輸入姓名、年齡，印出詳細資訊,"##### 輸入姓名、年齡，印出詳細資訊

先輸入中文英文皆可: 注意:輸入時前後不要加上空白，否則會Wrong Answer!

Jack

輸入年齡:

18


請印出標準答案到螢幕:  每個字之間只有一個空白分隔，注意是英文空白符號，不要不小心切到中文空白，那會Wrong Answer!

```
Jack is 18 years old.
```

例如，另一個，輸入輸出:
```
李大同
20
李大同 is 20 years old.
```

(1)Java從鍵盤輸入的指令:
```java
import java.util.Scanner;
Scanner sc = new Scanner(System.in);
String name = sc.nextLine(); //讀入一行字串
int age = sc.nextInt();
```
(2)Java輸出到螢幕用到的指令:
```
System.out.print(   ); //印出之後不換行
System.out.println(   );

格式化列印:
System.out.printf(""My name is %s. I am %d years old."",  name, age);
%s  表示塞入字串    %d 表示塞入整數
```

思考一下，應該用何種方式完成題目要求

```java
// 這裡引入套件
import java.util.Scanner;

public class Main
{
  public static void main(String[] args)
  {
	   //你的程式碼
  }
}
```

",,"李大同
25",李大同 is 25 years old.,"import java.util.Scanner;

public class Main
{
  public static void main(String[] args)
	{
       Scanner sc = new Scanner(System.in);
       String name = sc.nextLine(); //讀入一行字串
       int age = sc.nextInt();
       System.out.printf( ""%s is %d years old."", name, age  );		     
	}
}",2024-08-30 21:48:57,2024-10-24 23:55:32,"//PREPEND BEGIN
//PREPEND END
//TEMPLATE BEGIN
//TEMPLATE END
//APPEND BEGIN
//APPEND END",1
